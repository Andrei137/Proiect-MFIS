=== Processing sum.smv ===
*** This is NuSMV 2.7.0 (compiled on Thu Oct 24 17:56:00 2024)
*** Enabled addons are: compass
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>

*** Copyright (c) 2010-2024, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

********  Simulation Starting From State 1.1   ********
Trace Description: Simulation Trace 
Trace Type: Simulation 
  -> State: 1.1 <-
    a = 2
    b = 3
    c = 0
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = running
    Sup = 10
  -> State: 1.2 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 2
    n2 = 3
    state = running
    Sup = 10
  -> State: 1.3 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.4 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.5 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.6 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.7 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.8 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.9 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.10 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
  -> State: 1.11 <-
    a = 0
    b = 0
    c = 5
    a_init = 2
    b_init = 3
    n1 = 0
    n2 = 0
    state = halt
    Sup = 10
-- specification  G (state = running -> ((a >= 0 & b >= 0) & c <= a_init + b_init))  is true
-- specification  G (state = halt -> ((a = 0 & b = 0) & c = a_init + b_init))  is true
