
C:\Users\Opportunity\Desktop\Teodor - anul III\Semestrul 2\Metode formale in ingineria software\Proiect NuSMV\Proiect-MFIS\src>nusmv -int int_div.smv
*** This is NuSMV 2.7.0 (compiled on Thu Oct 24 17:56:00 2024)
*** Enabled addons are: compass
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>

*** Copyright (c) 2010-2024, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver.
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

NuSMV > go
NuSMV > pick_state
NuSMV > simulate -v
********  Simulation Starting From State 1.1   ********
Trace Description: Simulation Trace
Trace Type: Simulation
  -> State: 1.1 <-
    a_1 = 3
    b_2 = 3
    alpha_1 = 1
    a_3 = 0
    b_3 = 0
    c_3 = 0
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 0
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.2 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 3
    b_3 = 3
    c_3 = 0
    r_3 = 0
    alpha_3 = 1
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 3
    n2 = 3
    n3 = 1
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 1
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.3 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 2
    b_3 = 2
    c_3 = 0
    r_3 = 1
    alpha_3 = 1
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 1
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 2
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.4 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 1
    b_3 = 1
    c_3 = 0
    r_3 = 2
    alpha_3 = 1
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 1
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 3
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.5 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 0
    r_3 = 3
    alpha_3 = 1
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 1
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 4
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.6 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 3
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 1
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 5
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.7 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 2
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 1
    n10 = 0
    n11 = 0
    state = running
    step = 6
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.8 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 1
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 1
    n10 = 0
    n11 = 0
    state = running
    step = 7
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.9 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 1
    n10 = 0
    n11 = 0
    state = running
    step = 8
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.10 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = halt
    step = 9
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 1.11 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 0
    b_3 = 0
    c_3 = 1
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 1
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = halt
    step = 9
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
NuSMV >  
NuSMV > check_ltlspec
-- specification  G (state = halt & a_1 != 0)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample
Trace Type: Counterexample
  -> State: 2.1 <-
    a_1 = 3
    b_2 = 3
    alpha_1 = 1
    a_3 = 0
    b_3 = 0
    c_3 = 0
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 0
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 2.2 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 3
    b_3 = 3
    alpha_3 = 1
    n1 = 3
    n2 = 3
    n3 = 1
    step = 1
  -> State: 2.3 <-
    a_3 = 2
    b_3 = 2
    r_3 = 1
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 1
    step = 2
  -> State: 2.4 <-
    a_3 = 1
    b_3 = 1
    r_3 = 2
    step = 3
  -> State: 2.5 <-
    a_3 = 0
    b_3 = 0
    r_3 = 3
    step = 4
  -> State: 2.6 <-
    c_3 = 1
    alpha_3 = 0
    delta_3 = 1
    n4 = 0
    n8 = 1
    step = 5
  -> State: 2.7 <-
    r_3 = 2
    n8 = 0
    n9 = 1
    step = 6
  -> State: 2.8 <-
    r_3 = 1
    step = 7
  -> State: 2.9 <-
    r_3 = 0
    step = 8
  -- Loop starts here
  -> State: 2.10 <-
    n9 = 0
    state = halt
    step = 9
  -> State: 2.11 <-
-- specification  F (state = halt & a_1 != 0)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample
Trace Type: Counterexample
  -> State: 3.1 <-
    a_1 = 3
    b_2 = 3
    alpha_1 = 1
    a_3 = 0
    b_3 = 0
    c_3 = 0
    r_3 = 0
    alpha_3 = 0
    beta_3 = 0
    gamma_3 = 0
    delta_3 = 0
    NaN_3 = 0
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 0
    n5 = 0
    n6 = 0
    n7 = 0
    n8 = 0
    n9 = 0
    n10 = 0
    n11 = 0
    state = running
    step = 0
    a_1_init = 3
    b_2_init = 3
    Sup = 3
    MaxSteps = 30
    Max = 3
  -> State: 3.2 <-
    a_1 = 0
    b_2 = 0
    alpha_1 = 0
    a_3 = 3
    b_3 = 3
    alpha_3 = 1
    n1 = 3
    n2 = 3
    n3 = 1
    step = 1
  -> State: 3.3 <-
    a_3 = 2
    b_3 = 2
    r_3 = 1
    n1 = 0
    n2 = 0
    n3 = 0
    n4 = 1
    step = 2
  -> State: 3.4 <-
    a_3 = 1
    b_3 = 1
    r_3 = 2
    step = 3
  -> State: 3.5 <-
    a_3 = 0
    b_3 = 0
    r_3 = 3
    step = 4
  -> State: 3.6 <-
    c_3 = 1
    alpha_3 = 0
    delta_3 = 1
    n4 = 0
    n8 = 1
    step = 5
  -> State: 3.7 <-
    r_3 = 2
    n8 = 0
    n9 = 1
    step = 6
  -> State: 3.8 <-
    r_3 = 1
    step = 7
  -> State: 3.9 <-
    r_3 = 0
    step = 8
  -- Loop starts here
  -> State: 3.10 <-
    n9 = 0
    state = halt
    step = 9
  -> State: 3.11 <-
-- specification  F state = halt  is true
-- specification (state = running U state = halt)  is true
-- specification  F (state = halt & (((b_2_init != 0 & a_1_init = c_3 * b_2_init + r_3) & NaN_3 = 0) | (b_2_init = 0 & NaN_3 = 1)))  is true
-- specification  G (state = halt -> (((b_2_init != 0 & a_1_init = c_3 * b_2_init + r_3) & NaN_3 = 0) | (b_2_init = 0 & NaN_3 = 1)))  is true
NuSMV > 